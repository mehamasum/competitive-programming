/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *ret, *result, *t1=l1, *t2=l2;
        
        if(t1==NULL && t2!=NULL) return t2;
        else if(t2==NULL && t1!=NULL) return t1;
        else if(t1==NULL && t2==NULL) return NULL;
        
        if(t1->val <= t2->val) {
            result = new ListNode(t1->val); 
            t1 = t1->next;
        }
        else {
            result = new ListNode(t2->val);
            t2 = t2->next;
        }
        
        ret = result;
        //cout<<result->val << endl;
        
        while(t1!=NULL && t2!=NULL) {
            //cout<< t1->val << " " << t2->val <<endl; 
            if(t1->val <= t2->val) {
                result->next = new ListNode(t1->val); 
                result = result->next;
                t1 = t1->next;
            }
            else {
                result->next = new ListNode(t2->val); 
                result = result->next;
                t2 = t2->next;
            }
        }
        
        while(t1!=NULL) {
            result->next = new ListNode(t1->val); 
            result = result->next;
            t1 = t1->next;
        }
        
        while(t2!=NULL) {
            result->next = new ListNode(t2->val); 
            result = result->next;
            t2 = t2->next;
        }
        
        return ret;
        
    }
};